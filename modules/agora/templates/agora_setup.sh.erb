#!/bin/bash

HOME=/home/agora
source $HOME/.profile

cd $HOME
[ ! -d $HOME/.virtualenvs/agora-ciudadana ] && mkvirtualenv agora-ciudadana

[ ! -d $HOME/agora-ciudadana ] && (git clone https://github.com/agoraciudadana/agora-ciudadana.git; cd agora-ciudadana; git checkout security)

cd $HOME
if [ ! -f  $HOME/agora-ciudadana/agora_site/custom_settings.py ] || [ "<%= @overwrite_agora_settings %>" == "true" ]
then
    mv $HOME/custom_settings.py $HOME/agora-ciudadana/agora_site
fi

git config --global user.email "<%= @admin_email %>"
git config --global user.name "<%= @admin_name %>"

workon agora-ciudadana
cd $HOME/agora-ciudadana
git stash
git pull --rebase
git stash apply

pip install -r requirements.txt
pip install psycopg2 uwsgi raven johnny-cache pylibmc

make dependencies
make all

./manage.py syncdb --all
./manage.py migrate --fake
./manage.py rebuild_index --noinput
./manage.py check_permissions
./manage.py compilemessages
./manage.py collectstatic --noinput

echo '[{"pk": 1, "model": "sites.site", "fields": {"domain": "<%= @agora_fqdn %>", "name": "<%= @agora_fqdn %>"}}]' > site.json
./manage.py loaddata site.json
rm site.json

<% if @enable_aelection == 'true' %>
if [ ! -f /var/www/agora_httpauth ]
then
    crypt.pl /var/www/agora_httpauth "<%= @httpauth_user %>" "<%= @httpauth_password %>"
fi
<% end %>

[ -f flatpages.json ] && ./manage.py loaddata flatpages.json
exit 0