#!/bin/bash

export HOME=/home/agora
source $HOME/.profile

cd $HOME
[ ! -d $HOME/.virtualenvs/agora-ciudadana ] && mkvirtualenv agora-ciudadana

if [ ! -d $HOME/agora-ciudadana ]
then
    git config --global http.sslVerify false
    git clone https://github.com/agoravoting/agora-ciudadana.git
    cd $HOME/agora-ciudadana
    echo "PWD = $(pwd)"
    git checkout security
    cd $HOME/
fi

if [ ! -f  $HOME/agora-ciudadana/agora_site/custom_settings.py ] || [ "<%= @overwrite_agora_settings %>" == "true" ]
then
    mv $HOME/custom_settings.py $HOME/agora-ciudadana/agora_site
fi

git config --global user.email "<%= @admin_email %>"
git config --global user.name "<%= @admin_name %>"

echo "PWD = $(pwd)"
echo "executing workon"
workon agora-ciudadana
cd $HOME/agora-ciudadana
echo "PWD = $(pwd)"
git stash
git pull --rebase
git stash apply

echo "cat requirements.txt:"
cat requirements.txt
echo "pip install -r requirements.txt:"
pip install -r requirements.txt
pip install psycopg2 uwsgi raven johnny-cache pylibmc

make dependencies
make all

./manage.py syncdb --all
./manage.py migrate --fake
./manage.py rebuild_index --noinput
./manage.py check_permissions
./manage.py compilemessages
./manage.py collectstatic --noinput

echo '[{"pk": 1, "model": "sites.site", "fields": {"domain": "<%= @agora_fqdn %>", "name": "<%= @agora_fqdn %>"}}]' > site.json
./manage.py loaddata site.json
rm site.json

[ -f flatpages.json ] && ./manage.py loaddata flatpages.json

./manage.py createsuperuser <<EOF
<%= @agora_admin_username %>
<%= @admin_email %>
<%= @agora_admin_password %>
<%= @agora_admin_password %>
EOF

exit 0