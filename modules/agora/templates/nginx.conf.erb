user  www-data;
worker_processes  2;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  2048;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile       on;
    tcp_nopush     on;

    # caches information about open FDs, frequently accessed files
    open_file_cache max=2000 inactive=30s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # timeout for keep alive connections. server will close connection after this time
    keepalive_timeout  40;

    # Number of requests a client can make over the keep-alive connection. If you set it high, should probably only be for test
    keepalive_requests 100;

    # allow the server to close the connection after a client stops responding.
    reset_timedout_connection on;

    # send the client a request timed out if the body is not loaded
    client_body_timeout 10;

    # if the client stops reading data, free up the state client connection after this much time. defaults to 60.
    send_timeout 10;

    # compression. reduces the amount of data that needs to be transfered over the network
    gzip  on;
    gzip_static on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript applicaion/xml;
    gzip_disable "MSIE [1-6]\.";

    # we limit both on IP (single machine) as well as project ID
    limit_req_zone  $binary_remote_addr  zone=one:10m   rate=3r/s;

    # limit_req_status requires nginx 1.3.15 or newer
    limit_req_status 429;

    include /etc/nginx/conf.d/*.conf;
}